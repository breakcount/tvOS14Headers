//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "NRLinkManager.h"

#import "NRLinkDelegate-Protocol.h"

@class NEPolicySession, NRPreferWiFiAgent, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NWAddressEndpoint;
@protocol NRLinkManagerWiFiDelegate;

@interface NRLinkManagerWiFi : NRLinkManager <NRLinkDelegate>
{
    _Bool _isWiFiAvailable;	// 8 = 0x8
    _Bool _isWoWEnabled;	// 9 = 0x9
    unsigned int _wifiInterfaceIndex;	// 12 = 0xc
    int _preferWiFiAsserts;	// 16 = 0x10
    int _clearedPreferWiFiAssertCounts;	// 20 = 0x14
    int _currentWiFiClientType;	// 24 = 0x18
    NWAddressEndpoint *_localWiFiEndpoint;	// 32 = 0x20
    NWAddressEndpoint *_peerWiFiEndpoint;	// 40 = 0x28
    NSData *_localWiFiSignature;	// 48 = 0x30
    NSData *_peerWiFiSignature;	// 56 = 0x38
    NSString *_wifiInterfaceName;	// 64 = 0x40
    struct __SCDynamicStore *_scdynamicStoreRef;	// 72 = 0x48
    NSString *_scdKeyIPv4;	// 80 = 0x50
    NSString *_scdKeyIPv6;	// 88 = 0x58
    NSMutableArray *_scdAddressArrayIPv4;	// 96 = 0x60
    NSMutableArray *_scdAddressArrayIPv6;	// 104 = 0x68
    unsigned long long _scdUpdateCounter;	// 112 = 0x70
    NSMutableSet *_links;	// 120 = 0x78
    id <NRLinkManagerWiFiDelegate> _wifiManagerDelegate;	// 128 = 0x80
    NRPreferWiFiAgent *_wifiAgent;	// 136 = 0x88
    NEPolicySession *_policySession;	// 144 = 0x90
    unsigned long long _enableWiFiCounter;	// 152 = 0x98
    unsigned long long _disableWiFiCounter;	// 160 = 0xa0
    struct __WiFiManagerClient *_wifiClient;	// 168 = 0xa8
    struct __SCNetworkInterface *_wifiInterface;	// 176 = 0xb0
    NSMutableSet *_wifiAutojoinClients;	// 184 = 0xb8
    NSMutableDictionary *_assertionReasonDictionary;	// 192 = 0xc0
    NSMutableDictionary *_assertionClientDictionary;	// 200 = 0xc8
    NSMutableDictionary *_lastAssertionReport;	// 208 = 0xd0
    unsigned long long _powerlogUpdateCounter;	// 216 = 0xd8
}

+ (_Bool)deviceSupportsAlwaysOnWiFi;	// IMP=0x00000001000baab4
+ (struct __WiFiManagerClient *)copySharedWiFiManagerClientRef;	// IMP=0x00000001000baa64
- (void).cxx_destruct;	// IMP=0x00000001000b9c34
@property(nonatomic) unsigned long long powerlogUpdateCounter; // @synthesize powerlogUpdateCounter=_powerlogUpdateCounter;
@property(nonatomic) _Bool isWoWEnabled; // @synthesize isWoWEnabled=_isWoWEnabled;
@property(nonatomic) int currentWiFiClientType; // @synthesize currentWiFiClientType=_currentWiFiClientType;
@property(retain, nonatomic) NSMutableDictionary *lastAssertionReport; // @synthesize lastAssertionReport=_lastAssertionReport;
@property(retain, nonatomic) NSMutableDictionary *assertionClientDictionary; // @synthesize assertionClientDictionary=_assertionClientDictionary;
@property(retain, nonatomic) NSMutableDictionary *assertionReasonDictionary; // @synthesize assertionReasonDictionary=_assertionReasonDictionary;
@property(nonatomic) int clearedPreferWiFiAssertCounts; // @synthesize clearedPreferWiFiAssertCounts=_clearedPreferWiFiAssertCounts;
@property(retain, nonatomic) NSMutableSet *wifiAutojoinClients; // @synthesize wifiAutojoinClients=_wifiAutojoinClients;
@property(nonatomic) struct __SCNetworkInterface *wifiInterface; // @synthesize wifiInterface=_wifiInterface;
@property(nonatomic) struct __WiFiManagerClient *wifiClient; // @synthesize wifiClient=_wifiClient;
@property(nonatomic) unsigned long long disableWiFiCounter; // @synthesize disableWiFiCounter=_disableWiFiCounter;
@property(nonatomic) unsigned long long enableWiFiCounter; // @synthesize enableWiFiCounter=_enableWiFiCounter;
@property(nonatomic) int preferWiFiAsserts; // @synthesize preferWiFiAsserts=_preferWiFiAsserts;
@property(retain, nonatomic) NEPolicySession *policySession; // @synthesize policySession=_policySession;
@property(retain, nonatomic) NRPreferWiFiAgent *wifiAgent; // @synthesize wifiAgent=_wifiAgent;
@property(nonatomic) __weak id <NRLinkManagerWiFiDelegate> wifiManagerDelegate; // @synthesize wifiManagerDelegate=_wifiManagerDelegate;
@property(retain, nonatomic) NSMutableSet *links; // @synthesize links=_links;
@property(nonatomic) unsigned long long scdUpdateCounter; // @synthesize scdUpdateCounter=_scdUpdateCounter;
@property(nonatomic) _Bool isWiFiAvailable; // @synthesize isWiFiAvailable=_isWiFiAvailable;
@property(retain, nonatomic) NSMutableArray *scdAddressArrayIPv6; // @synthesize scdAddressArrayIPv6=_scdAddressArrayIPv6;
@property(retain, nonatomic) NSMutableArray *scdAddressArrayIPv4; // @synthesize scdAddressArrayIPv4=_scdAddressArrayIPv4;
@property(retain, nonatomic) NSString *scdKeyIPv6; // @synthesize scdKeyIPv6=_scdKeyIPv6;
@property(retain, nonatomic) NSString *scdKeyIPv4; // @synthesize scdKeyIPv4=_scdKeyIPv4;
@property(nonatomic) struct __SCDynamicStore *scdynamicStoreRef; // @synthesize scdynamicStoreRef=_scdynamicStoreRef;
@property(retain, nonatomic) NSString *wifiInterfaceName; // @synthesize wifiInterfaceName=_wifiInterfaceName;
@property(nonatomic) unsigned int wifiInterfaceIndex; // @synthesize wifiInterfaceIndex=_wifiInterfaceIndex;
@property(retain, nonatomic) NSData *peerWiFiSignature; // @synthesize peerWiFiSignature=_peerWiFiSignature;
@property(retain, nonatomic) NSData *localWiFiSignature; // @synthesize localWiFiSignature=_localWiFiSignature;
@property(retain, nonatomic) NWAddressEndpoint *peerWiFiEndpoint; // @synthesize peerWiFiEndpoint=_peerWiFiEndpoint;
@property(retain, nonatomic) NWAddressEndpoint *localWiFiEndpoint; // @synthesize localWiFiEndpoint=_localWiFiEndpoint;
- (void)checkEnabledDevices;	// IMP=0x00000001000b9604
- (void)setupSCDWatcher;	// IMP=0x00000001000b905c
- (void)processSCDUpdate:(id)arg1;	// IMP=0x00000001000b8684
- (void)setupWiFiManager;	// IMP=0x00000001000b8480
- (_Bool)isWiFiPoweredOn;	// IMP=0x00000001000b8458
- (void)clearPreferWiFiAsserts;	// IMP=0x00000001000b82d4
- (_Bool)hasPreferWiFiAsserts;	// IMP=0x00000001000b827c
- (void)disableWiFi;	// IMP=0x00000001000b80c4
- (int)getEffectiveWiFiClientType;	// IMP=0x00000001000b8048
- (void)enableWiFi;	// IMP=0x00000001000b7ea0
- (void)reportClientType:(int)arg1;	// IMP=0x00000001000b7e0c
- (void)unregisterDirectToCloudAgent;	// IMP=0x00000001000b7e08
- (void)registerDirectToCloudAgent;	// IMP=0x00000001000b7e04
- (void)setDirectToCloudAssertionState:(_Bool)arg1;	// IMP=0x00000001000b7e00
- (void)addAssertionReasonWithMask:(unsigned long long)arg1 identifier:(id)arg2 clients:(id)arg3;	// IMP=0x00000001000b7bb8
- (void)removeAssertionReasonForIdentifier:(id)arg1;	// IMP=0x00000001000b7a80
- (void)reportToPowerlog;	// IMP=0x00000001000b79a8
- (void)setWiFiState:(_Bool)arg1 forConductorUUID:(id)arg2;	// IMP=0x00000001000b7830
- (void)interfaceUnavailable;	// IMP=0x00000001000b760c
- (void)interfaceAvailable;	// IMP=0x00000001000b722c
- (void)createLinkIfApplicable;	// IMP=0x00000001000b6e18
- (id)createWiFiLinkForNRUUID:(id)arg1;	// IMP=0x00000001000b6c90
- (void)updateAvoidCompanionNotifyTokenIfNeeded;	// IMP=0x00000001000b6c8c
- (_Bool)updateWiFiSignatureFromNWI:(struct _nwi_ifstate *)arg1 addressFamily:(int)arg2;	// IMP=0x00000001000b66d0
- (void)linkDidReceiveData:(id)arg1 data:(id)arg2;	// IMP=0x00000001000b654c
- (void)linkIsUnavailable:(id)arg1;	// IMP=0x00000001000b6390
- (void)linkIsSuspended:(id)arg1;	// IMP=0x00000001000b6210
- (void)linkIsReady:(id)arg1;	// IMP=0x00000001000b6090
- (void)linkIsAvailable:(id)arg1;	// IMP=0x00000001000b5ed4
- (id)copyStatusString;	// IMP=0x00000001000b5ae4
- (id)copyName;	// IMP=0x00000001000b5ad8
- (void)dealloc;	// IMP=0x00000001000b5a3c
- (void)invalidateManager;	// IMP=0x00000001000b58b0
- (void)cancel;	// IMP=0x00000001000b566c
- (id)initManagerWithQueue:(id)arg1 managerDelegate:(id)arg2 wifiManagerDelegate:(id)arg3;	// IMP=0x00000001000b5394

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

