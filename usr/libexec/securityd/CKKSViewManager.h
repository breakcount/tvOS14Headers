//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CKKSCloudKitAccountStateListener-Protocol.h"
#import "CKKSControlProtocol-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"

@class CKContainer, CKKSAccountStateTracker, CKKSCloudKitClassDependencies, CKKSCondition, CKKSListenerCollection, CKKSLockStateTracker, CKKSNearFutureScheduler, CKKSRateLimiter, CKKSReachabilityTracker, CKKSZoneChangeFetcher, CKKSZoneModifier, NSMutableDictionary, NSOperationQueue, NSSet, NSString, NSXPCListener, TPSyncingPolicy;
@protocol OTSOSAdapter;

__attribute__((visibility("hidden")))
@interface CKKSViewManager : NSObject <NSXPCListenerDelegate, CKKSCloudKitAccountStateListener, CKKSControlProtocol>
{
    _Bool _overrideCKKSViewsFromPolicy;	// 8 = 0x8
    _Bool _valueCKKSViewsFromPolicy;	// 9 = 0x9
    _Bool _startCKOperationAtViewCreation;	// 10 = 0xa
    _Bool _itemModificationsBeforePolicyLoaded;	// 11 = 0xb
    CKContainer *_container;	// 16 = 0x10
    CKKSAccountStateTracker *_accountTracker;	// 24 = 0x18
    CKKSLockStateTracker *_lockStateTracker;	// 32 = 0x20
    CKKSReachabilityTracker *_reachabilityTracker;	// 40 = 0x28
    CKKSZoneChangeFetcher *_zoneChangeFetcher;	// 48 = 0x30
    CKKSZoneModifier *_zoneModifier;	// 56 = 0x38
    CKKSCondition *_completedSecCKKSInitialize;	// 64 = 0x40
    CKKSRateLimiter *_globalRateLimiter;	// 72 = 0x48
    id <OTSOSAdapter> _sosPeerAdapter;	// 80 = 0x50
    TPSyncingPolicy *_policy;	// 88 = 0x58
    NSMutableDictionary *_views;	// 96 = 0x60
    NSXPCListener *_listener;	// 104 = 0x68
    NSSet *_viewAllowList;	// 112 = 0x70
    CKKSCloudKitClassDependencies *_cloudKitClassDependencies;	// 120 = 0x78
    NSMutableDictionary *_pendingSyncCallbacks;	// 128 = 0x80
    CKKSNearFutureScheduler *_savedTLKNotifier;	// 136 = 0x88
    NSOperationQueue *_operationQueue;	// 144 = 0x90
    CKKSListenerCollection *_peerChangeListenerCollection;	// 152 = 0x98
    CKKSCondition *_policyLoaded;	// 160 = 0xa0
}

+ (id)manager;	// IMP=0x00000001000e0e00
+ (void)callSyncCallbackWithErrorNoAccount:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e0d70
+ (id)makeCKContainer:(id)arg1 usePCS:(_Bool)arg2;	// IMP=0x00000001000e0ca4
- (void).cxx_destruct;	// IMP=0x00000001000de9c0
@property(retain) CKKSCondition *policyLoaded; // @synthesize policyLoaded=_policyLoaded;
@property _Bool itemModificationsBeforePolicyLoaded; // @synthesize itemModificationsBeforePolicyLoaded=_itemModificationsBeforePolicyLoaded;
@property(nonatomic) _Bool startCKOperationAtViewCreation; // @synthesize startCKOperationAtViewCreation=_startCKOperationAtViewCreation;
@property(nonatomic) _Bool valueCKKSViewsFromPolicy; // @synthesize valueCKKSViewsFromPolicy=_valueCKKSViewsFromPolicy;
@property(nonatomic) _Bool overrideCKKSViewsFromPolicy; // @synthesize overrideCKKSViewsFromPolicy=_overrideCKKSViewsFromPolicy;
@property(retain) CKKSListenerCollection *peerChangeListenerCollection; // @synthesize peerChangeListenerCollection=_peerChangeListenerCollection;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) CKKSNearFutureScheduler *savedTLKNotifier; // @synthesize savedTLKNotifier=_savedTLKNotifier;
@property(retain) NSMutableDictionary *pendingSyncCallbacks; // @synthesize pendingSyncCallbacks=_pendingSyncCallbacks;
@property(retain) CKKSCloudKitClassDependencies *cloudKitClassDependencies; // @synthesize cloudKitClassDependencies=_cloudKitClassDependencies;
@property(retain) NSSet *viewAllowList; // @synthesize viewAllowList=_viewAllowList;
@property(retain) NSXPCListener *listener; // @synthesize listener=_listener;
@property(readonly) NSMutableDictionary *views; // @synthesize views=_views;
@property(retain) TPSyncingPolicy *policy; // @synthesize policy=_policy;
@property(retain) id <OTSOSAdapter> sosPeerAdapter; // @synthesize sosPeerAdapter=_sosPeerAdapter;
@property(retain) CKKSRateLimiter *globalRateLimiter; // @synthesize globalRateLimiter=_globalRateLimiter;
@property(retain) CKKSCondition *completedSecCKKSInitialize; // @synthesize completedSecCKKSInitialize=_completedSecCKKSInitialize;
@property(retain) CKKSZoneModifier *zoneModifier; // @synthesize zoneModifier=_zoneModifier;
@property(retain) CKKSZoneChangeFetcher *zoneChangeFetcher; // @synthesize zoneChangeFetcher=_zoneChangeFetcher;
@property(retain) CKKSReachabilityTracker *reachabilityTracker; // @synthesize reachabilityTracker=_reachabilityTracker;
@property(retain) CKKSLockStateTracker *lockStateTracker; // @synthesize lockStateTracker=_lockStateTracker;
@property(retain) CKKSAccountStateTracker *accountTracker; // @synthesize accountTracker=_accountTracker;
@property(retain) CKContainer *container; // @synthesize container=_container;
- (void)haltAll;	// IMP=0x00000001000de648
- (void)xpc24HrNotification;	// IMP=0x00000001000de2cc
- (void)rpcCKMetric:(id)arg1 attributes:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000de130
- (void)rpcGetCKDeviceIDWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001000de0a0
- (void)rpcPushOutgoingChanges:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000ddc88
- (void)rpcFetchAndProcessChanges:(id)arg1 classA:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000dd840
- (void)rpcFetchAndProcessClassAChanges:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dd7ec
- (void)rpcFetchAndProcessChanges:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dd798
- (void)rpcFastStatus:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dd744
- (void)rpcStatus:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dd6f0
- (void)rpcStatus:(id)arg1 fast:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000dd114
- (void)rpcResyncLocal:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dcd18
- (void)rpcResync:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dc8dc
- (void)rpcResetCloudKit:(id)arg1 reason:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000dc3f4
- (void)rpcResetLocal:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000dc030
- (id)views:(id)arg1 operation:(id)arg2 errorOnPolicyMissing:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000001000dbaf4
- (id)views:(id)arg1 operation:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000dba84
- (void)performanceCounters:(CDUnknownBlockType)arg1;	// IMP=0x00000001000dba70
- (id)currentTLKsFilteredByPolicy:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000001000db280
- (void)syncBackupAndNotifyAboutSync;	// IMP=0x00000001000db1d0
- (void)notifyNewTLKsInKeychain;	// IMP=0x00000001000db144
- (void)cancelPendingOperations;	// IMP=0x00000001000db104
- (void)getCurrentItemForAccessGroup:(id)arg1 identifier:(id)arg2 viewHint:(id)arg3 fetchCloudValue:(_Bool)arg4 complete:(CDUnknownBlockType)arg5;	// IMP=0x00000001000daf4c
- (void)setCurrentItemForAccessGroup:(id)arg1 hash:(id)arg2 accessGroup:(id)arg3 identifier:(id)arg4 viewHint:(id)arg5 replacing:(id)arg6 hash:(id)arg7 complete:(CDUnknownBlockType)arg8;	// IMP=0x00000001000dad24
- (void)handleKeychainEventDbConnection:(struct __OpaqueSecDbConnection *)arg1 source:(unsigned long long)arg2 added:(struct SecDbItem *)arg3 deleted:(struct SecDbItem *)arg4;	// IMP=0x00000001000da6a4
- (void)cloudkitAccountStateChange:(id)arg1 to:(id)arg2;	// IMP=0x00000001000da390
- (id)pendingCallbackUUIDs;	// IMP=0x00000001000da2d0
- (CDUnknownBlockType)claimCallbackForUUID:(id)arg1;	// IMP=0x00000001000da114
- (void)registerSyncStatusCallback:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x00000001000d9f90
- (id)viewNameForItem:(struct SecDbItem *)arg1;	// IMP=0x00000001000d9c88
- (_Bool)useCKKSViewsFromPolicy;	// IMP=0x00000001000d9bc8
- (id)viewNameForViewHint:(id)arg1;	// IMP=0x00000001000d9b24
- (id)restartZone:(id)arg1;	// IMP=0x00000001000d9a74
- (void)haltZone:(id)arg1;	// IMP=0x00000001000d9954
- (void)beginCloudKitOperationOfAllViews;	// IMP=0x00000001000d97fc
- (void)createViews;	// IMP=0x00000001000d965c
- (id)currentViews;	// IMP=0x00000001000d9470
- (id)findOrCreateView:(id)arg1;	// IMP=0x00000001000d913c
- (id)findView:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d8df0
- (id)findView:(id)arg1;	// IMP=0x00000001000d8d20
- (void)clearView:(id)arg1;	// IMP=0x00000001000d8c0c
- (void)clearAllViews;	// IMP=0x00000001000d8a18
- (void)setView:(id)arg1;	// IMP=0x00000001000d88ac
- (void)resetSyncingPolicy;	// IMP=0x00000001000d87dc
- (void)setSyncingViewsAllowList:(id)arg1;	// IMP=0x00000001000d87d0
- (_Bool)setCurrentSyncingPolicy:(id)arg1 policyIsFresh:(_Bool)arg2;	// IMP=0x00000001000d7e0c
- (_Bool)setCurrentSyncingPolicy:(id)arg1;	// IMP=0x00000001000d7dfc
- (id)viewList;	// IMP=0x00000001000d7d88
- (id)defaultViewList;	// IMP=0x00000001000d7d0c
- (void)lockStateChangeNotification:(_Bool)arg1;	// IMP=0x00000001000d7c84
- (id)getGlobalRateLimiter;	// IMP=0x00000001000d7b84
- (void)dealloc;	// IMP=0x00000001000d7b38
- (void)setupAnalytics;	// IMP=0x00000001000d7840
- (_Bool)waitForTrustReady;	// IMP=0x00000001000d7798
- (id)initWithContainer:(id)arg1 sosAdapter:(id)arg2 accountStateTracker:(id)arg3 lockStateTracker:(id)arg4 cloudKitClassDependencies:(id)arg5;	// IMP=0x00000001000d7348

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

